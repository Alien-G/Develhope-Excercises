CREATE TABLE MEAL (
  NAME VARCHAR(255),
  PRICE DOUBLE,
  CALORIES INT
);
INSERT INTO MEAL(NAME, PRICE, CALORIES)
VALUES ('Spaghetti Bolognese', 12.99, 600),
('Grilled Chicken Sandwich', 8.99, 400),
('Pesto Pasta', 10.99, 550),
('Steak and Mash', 19.99, 800),
('Sushi Platter', 15.99, 700);

CREATE TABLE MEAL_ORDER (
TIME_MEAL_ORDERED TIMESTAMP DEFAULT NOW(),
MEAL_NAME VARCHAR(255));

INSERT INTO MEAL_ORDER (TIME_MEAL_ORDERED, MEAL_NAME)
VALUES (NOW(), 'Spaghetti Bolognese');

INSERT INTO MEAL_ORDER (TIME_MEAL_ORDERED, MEAL_NAME)
VALUES (DATE_ADD(NOW(), INTERVAL 1 HOUR), 'Grilled Chicken Sandwich');

INSERT INTO MEAL_ORDER (TIME_MEAL_ORDERED, MEAL_NAME)
VALUES (DATE_ADD(NOW(), INTERVAL 2 HOUR), 'Pesto Pasta');

INSERT INTO MEAL_ORDER (TIME_MEAL_ORDERED, MEAL_NAME)
VALUES (DATE_ADD(NOW(), INTERVAL 3 HOUR), 'Pesto Pasta');

INSERT INTO MEAL_ORDER (TIME_MEAL_ORDERED, MEAL_NAME)
VALUES (DATE_ADD(NOW(), INTERVAL 4 HOUR), 'Grilled Chicken Sandwich');

INSERT INTO MEAL_ORDER (TIME_MEAL_ORDERED, MEAL_NAME)
VALUES (DATE_ADD(NOW(), INTERVAL 5 HOUR), 'Pesto Pasta');

INSERT INTO MEAL_ORDER (TIME_MEAL_ORDERED, MEAL_NAME)
VALUES (DATE_ADD(NOW(), INTERVAL 6 HOUR), 'Spaghetti Bolognese');

INSERT INTO MEAL_ORDER (TIME_MEAL_ORDERED, MEAL_NAME)
VALUES (DATE_ADD(NOW(), INTERVAL 7 HOUR), 'Pesta Pasta');

INSERT INTO MEAL_ORDER (TIME_MEAL_ORDERED, MEAL_NAME)
VALUES (DATE_ADD(NOW(), INTERVAL 8 HOUR), 'Pesto Pasta');

INSERT INTO MEAL_ORDER (TIME_MEAL_ORDERED, MEAL_NAME)
VALUES (DATE_ADD(NOW(), INTERVAL 9 HOUR), 'Spaghetti Bolognese');

-- Write a query to find the maximum price of a meal with more than 500 calories.
-- Write a query to find the average calories of meals that cost more than 15 EUR.
-- Write a query to select all meals that have the MAX price, using HAVING and MAX().
-- Write a query to select all meals that have a price lower than the average price, using HAVING and AVG.
-- Write a query to select all meals that have a price lower than the average price and have more than 600 calories.

SELECT MAX(PRICE) AS MAX_PRICE
FROM MEAL
WHERE CALORIES > 500;

SELECT AVG(CALORIES) AS AVG_CALORIES
FROM MEAL
WHERE PRICE > 15;

SELECT NAME, PRICE
FROM MEAL
HAVING PRICE = (SELECT MAX(PRICE) FROM MEAL);

SELECT NAME, PRICE
FROM MEAL
HAVING PRICE < (SELECT AVG(PRICE) FROM MEAL);

SELECT NAME, PRICE, CALORIES
FROM MEAL
WHERE PRICE < (SELECT AVG(PRICE) FROM MEAL) AND CALORIES > 600;